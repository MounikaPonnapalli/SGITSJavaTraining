Name:pujitha vegi,
date:12/09/2023.
Interface:
        An interface can contains one or more abstract methods.It can also have any number of static and default methods, and it can declare variables that are public static final (constants) by default.For example,Imagine we have set songs.  It specifies that all songs must have a title, singer name , and a duration.The songs will play according the requirement of the user by calling  title or singer name.

Functional Interface:
         A functional interface that contains only one abstract method. They can have only one functionality to exhibit.Like a blueprint for functional behavior, it allows different implementations to a single functionality.It can have static and default methods, along with inherited methods from the Object class.Functional interfaces are designed to be used with lambda expressions and method references.For example,the songs are comparing on the based of different music enthusiasts who can compare songs based on their preferences such as singer name ,duration or genre.

OOPs:Object Oriented Programming Structure.

Abstraction:
     Abstraction is the property of hiding internal details and showing functionality is known as abstraction. For example, ATM machine when the user reaches to ATM user interface then we can see only funtionality of machine like card accessibility,Keypad and screen but we can't know how the internal detials.

Encapsulation:
       Binding (or wrapping) code and data together into a single unit are known as encapsulation.For example arranging  all the nail paints in one containers.
